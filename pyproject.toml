
# https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/
# https://shandou.medium.com/examples-of-using-conda-poetry-for-cross-platform-python-package-portability-71

[tool.poetry]
name = "my-project"
authors = ["Marcelo CAro"]
description = "A package for the ML research"
version = "0.0.1"
packages = [{ include = "project", from = "source_scripts" }]
#include = [{ path = "tests", format = "sdist" }]
classifiers = [
    "Topic :: Software Development :: Machine Learning",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["BERT", "examples"]


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

# [[tool.poetry.source]]
# name = "pytorch-cu118"
# url = "https://download.pytorch.org/whl/cu118"
# priority = "supplemental"


# [tool.poetry.scripts]
# ignite = "project.ignite:main"



[tool.poetry.dependencies]
python = "^3.9"
torch = {version = "2.0.1"}
lark = "^1.1.7"
jsonargparse = "^4.25.0"
s3fs = "^2023.9.2"
matplotlib = "^3.8.0"
transformers = "^4.34.0"
dataclasses-json = "^0.6.1"
yq = "^3.2.3"
ipython = "^8.16.1"
json2html = "^1.3.0"
jsoneditor = "^1.6.0"
jupyter-bokeh = "^3.0.7"
panel = "^1.2.3"
pyyaml = "^6.0.1"


[tool.poetry.group.dev.dependencies]
setuptools= "^40.8.0"
nbdev = "*"
wheel = "*"
mock = "*"
tox = "*"
pre-commit= "^3.3.3"
nbstripout= "^0.6.1"
black = "23.10.1"
pydocstyle = "*"
flake8 = "^1.0.0"
ipykernel = "^6.25.2"
quarto = "^0.1.0"
nbqa = "^1.7.0"
types-pyyaml = "^6.0.12.12"
isort = "^5.12.0"


[tool.poetry.group.typing.dependencies]
mypy = ">=1.0"
types-requests = ">=2.28.8"


[tool.poetry.group.test.dependencies]
pytest = "^7.1"
pytest-cov = "^4.0"
pytest-mock = "^3.9"
pytest-randomly = "^3.12"
pytest-xdist = { version = "^3.1", extras = ["psutil"] }
deepdiff = "^6.3"
httpretty = "^1.0"
coverage = "*"


[tool.nbqa.exclude]
black = "^source_scripts"

[tool.nbqa.files]
black = "^notebooks"


[tool.nbqa.addopts]
black = [
    "--config=pyproject.toml",
    "--line-length=250"
]

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"



[tool.coverage.run]
omit = [
    "*/__init__.py",
]

[tool.pytest]
addopts = "--cache-clear"


[tool.pydocstyle]
convention = "google"
